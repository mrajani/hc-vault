---
- name: Unseal, Encrypt, Copy Unseal Keys, Update Vault Leader
  hosts: localhost
  connection: local
  become: yes
  any_errors_fatal: true
  gather_facts: true
  tasks:
  - amazon.aws.ec2_metadata_facts:
  - name: Set AWS Region
    set_fact:
      aws_region: "{{ ansible_ec2_placement_region }}"

  - name: Get KMS Key from SSM Parameter Store
    set_fact:
      aws_kms_key: "{{lookup('aws_ssm', 'vault_unseal_key')}}"

  - name: Get S3 bucket store to save encrypted vault tokens
    set_fact:
      vault_s3: "{{lookup('aws_ssm', 'vault_tokens_encrypted')}}"

  - name: Get Vault Leader from SSM Parameter Store
    set_fact:
      vault_leader: "{{ lookup('aws_ssm', 'vault_leader') }}"

  - name: Print Vault Leader
    debug: msg={{ vault_leader }}

  - name: Join Vault Cluster if leader is found
    environment:
      VAULT_ADDR: "https://127.0.0.1:8200"
    command: /usr/local/bin/vault operator raft join {{ vault_leader }}
    ignore_errors: true
    changed_when:
      - join_status.rc == 2
    register: join_status
    when: "{{ 'https://' in vault_leader }}"

  - name: Print join_status
    debug: msg={{ join_status }}

  - name: Verify Vault Initialized
    environment:
      VAULT_ADDR: "https://127.0.0.1:8200"
    command: /usr/local/bin/vault operator init -status -tls-skip-verify
    ignore_errors: true
    changed_when:
      - status.rc == 2
      - '"Vault is not initialized" in status.stdout'
    register: status

  - name: Initialize Vault if not initialized and no cluster leader found
    environment:
      VAULT_ADDR: "https://127.0.0.1:8200"
    command: /usr/local/bin/vault operator init -tls-skip-verify
    register: unseal_keys
    when: ('"Vault is not initialized" in status.stdout' and vault_leader == 'none')

  - name: Update Vault Leader in SSM Store
    community.aws.aws_ssm_parameter_store:
      region: "{{ aws_region }}"
      name: "vault_leader"
      description: "Current Vault Cluster Leader"
      value: "https://{{ ansible_fqdn }}:8200"
    when: vault_leader == 'none'

  - name: Show Unseal keys
    debug:
      var: unseal_keys

  - name: Save the unseal keys to file
    copy:
      content: "{{ unseal_keys.stdout }}"
      dest: /tmp/unseal_keys.txt
    when: ('"Vault is not initialized" in status.stdout' and vault_leader == 'none')

  - name: Encrypt Recovery-Unseal Keys in S3 with KMS key
    args:
      executable: /bin/bash
      chdir: /tmp
    shell: |
      aws kms encrypt --region "{{ aws_region }}" --key-id "{{ aws_kms_key }}" --plaintext fileb://unseal_keys.txt --output text --query CiphertextBlob | /usr/bin/base64 --decode > /tmp/vault_creds_encrypted
    register: output
    when: ('"Vault is not initialized" in status.stdout' and vault_leader == 'none')

  - name: Show S3 cp output
    debug: msg={{ output }}
    when: ('"Vault is not initialized" in status.stdout' and vault_leader == 'none')

  - name: Encrypt Recovery-Unseal Keys in S3 with KMS key
    amazon.aws.aws_s3:
      bucket: "{{ vault_s3 }}"
      object: /creds/vault_encrypted
      src: /tmp/vault_creds_encrypted
      mode: put
    when: ('"Vault is not initialized" in status.stdout' and vault_leader == 'none')

  - name: Delete the plaintext key files
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /tmp/unseal_keys.txt
