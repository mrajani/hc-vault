---

- name: apt Update curl
  apt:
    name:  curl
    state: latest
  when: ansible_os_family == "Debian"

- name: yum Install curl
  yum:
    name: curl
    state: present
  when: (ansible_os_family == "RedHat")

- name: Get Instance Metadata
  shell: curl -H Metadata:true "http://169.254.169.254/metadata/instance/compute?api-version=2021-05-01&format=json"
  register: metadata

- name: get facts for from metadata service
  set_fact:
    md: "{{ metadata.stdout | from_json }}"

- name: "set azure_metadata"
  set_fact:
    subscription_id: "{{ md.subscriptionId }}"
    resource_group: "{{ md.resourceGroupName }}"
    vm_scale_set: "{{ md.vmScaleSetName }}"

- name: Download Vault executable
  get_url:
    url: https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_linux_amd64.zip
    dest: /tmp/vault.zip

- name: Create vault group
  group:
    name: vault

- name: Create vault user
  user:
    name: vault
    group: vault

- name: Unzip vault to /usr/local/bin
  unarchive:
    src: /tmp/vault.zip
    dest: /usr/local/bin
    remote_src: yes
    group: vault
    owner: vault

- name: Create installation directories for vault config and logging
  file:
    path: "{{ item }}"
    state: directory
    group: vault
    owner: vault
  with_items:
    - /opt/vault/raft
    - /etc/vault.d

- name: Copy vault config over
  template:
    src: vault.j2
    dest: /etc/vault.d/vault.hcl
    owner: vault
    group: vault

- name: Copy over vault systemctl config
  copy:
    src: vault.service
    dest: /lib/systemd/system/vault.service
    group: vault
    owner: vault

- name: Copy Vault Certs
  copy:
    src: "/usr/local/etc/{{ item }}"
    dest: /etc/vault.d/{{ item }}
    group: vault
    owner: vault
    mode: "0600"
  with_items:
    - ca.crt.pem
    - vault.crt.pem
    - vault.key.pem

- name: Restart systemctl daemon
  shell: systemctl daemon-reload

- name: Enable vault server
  shell: systemctl enable vault

- name: Start vault server
  shell: systemctl start vault

- name: Pause till the servers are started
  wait_for:
    timeout: 180
    port: 8200
    host: "{{ ansible_default_ipv4.address }}"
